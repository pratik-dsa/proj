{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1374924,"sourceType":"datasetVersion","datasetId":801841}],"dockerImageVersionId":29980,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Premier League Data Analysis and Visualization","metadata":{}},{"cell_type":"markdown","source":"### Importing the Basic Libraries","metadata":{}},{"cell_type":"code","source":"# basic operations\nimport numpy as np\nimport pandas as pd \n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn-pastel')\n\n# file path\nimport os\nprint(os.listdir(\"../input/premier-league-player-stats-data/\"))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Reading the Data","metadata":{}},{"cell_type":"code","source":"# reading the data and checking the run time\n\n%time data = pd.read_csv('/kaggle/input/premier-league-player-stats-data/Premier League Player Stats.csv')\n\nprint(data.shape)","metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# checking the first 5 rows and columns\ndata.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# decsribing the data\n\ndata.describe()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# checking NULL value\n\ndata.isnull().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## New Features\n\n\\# Percentage of shots goes to goal post\n\nShots Accuracy % = (Total Shots(Shots)/Shots on Goal(SOG)) * 100\n\n\\# percentage of goal accuracy\n\nGoal Accuracy % = (Goals(G)/(Shots on goal(SOG)) * 100\n\n\\# time required to shot one goal\n\nmin_per_goal = (Min(MIN)/Goals(G)) * 100","metadata":{}},{"cell_type":"code","source":"data.loc[data['G'] > 0, 'SA%'] =  round(data['SOG']/data['SHOTS'],3)*100\ndata.loc[data['G'] > 0, 'GA%'] =  round(data['G']/data['SHOTS'],3)*100\ndata.loc[data['G'] > 0, 'MPG'] = round(data['MIN']/data['G'],1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check for NaN values\ndata.isna().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# fill NaN values with lowest accuracy (0) for SA% and GA% beca\ndata['SA%'] = data['SA%'].fillna(0)\ndata['GA%'] = data['GA%'].fillna(0)\n\n# fill all NaN with max time for MPG\ndata['MPG'] = data['MPG'].fillna(data['MPG'].max())","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check whether nan value is filled or not\ndata.isna().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['SA%'], ascending=False).head(10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['GA%'], ascending=False).head(10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['MPG'], ascending=True).head(10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Analyzing Club Data","metadata":{}},{"cell_type":"code","source":"def team(x):\n    return data[data['TEAM'] == x]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Analysing Arsenal club data","metadata":{}},{"cell_type":"code","source":"arsenal = team('Arsenal')","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# top 10 arsenal player with highest shot accuracy\narsenal.sort_values(by=['MPG'], ascending=True).head(10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# top 10 arsenal player with highest goal accuracy\narsenal.sort_values(by=['GA%'], ascending=False).head(10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Visualization","metadata":{}},{"cell_type":"code","source":"x = data.GP\nplt.figure(figsize = (12, 8))\n\nax = sns.distplot(x, bins = 50, kde = False, color = 'b')\nax.set_xlabel(xlabel = 'Game Played range', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of the Players',fontsize = 16)\nax.set_title(label = 'Histogram for the number of game played of the Players', fontsize = 20)\nplt.show()\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# To show Different overall scores of the players participating in the FIFA 2019\n\nsns.set(style = \"dark\", palette = \"deep\", color_codes = True)\nx = data.G\nplt.figure(figsize = (12,8))\nplt.style.use('ggplot')\n\nax = sns.distplot(x, bins = 50, kde = False, color = 'r')\nax.set_xlabel(xlabel = \"Number of Goals\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of number of goals by players', fontsize = 20)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# To show Different nations participating in the premier league\n\nplt.style.use('fivethirtyeight')\ndata['TEAM'].value_counts().plot.bar(color = 'orange', figsize = (20, 7))\nplt.title('Different Nations Participating in Premier League', fontsize = 30, fontweight = 20)\nplt.xlabel('Name of The Country')\nplt.ylabel('Count')\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# plotting a correlation heatmap\n\nsns.heatmap(data.corr(), annot = True)\n\nplt.title('Correlation of the Dataset', fontsize = 30)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# picking up the countries with highest number of players to compare their overall scores\n\ndata['TEAM'].value_counts()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Every Nations' Player and their goals\n\nteams = ('West Ham United', 'Arsenal', 'Manchester United', 'Burnley', 'Norwich City', 'Liverpool', 'Watford', 'Tottenham Hotspur')\ndata_teams = data.loc[data['TEAM'].isin(teams) & data['G']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sns.violinplot(x = data_teams['TEAM'], y = data_teams['G'], palette = 'Reds')\nax.set_xlabel(xlabel = 'Countries', fontsize = 9)\nax.set_ylabel(ylabel = 'Number of GOals', fontsize = 9)\nax.set_title(label = 'Distribution of Goals of players from different countries', fontsize = 20)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Every Nations' Player and their overall scores\n\nteams = ('West Ham United', 'Arsenal', 'Manchester United', 'Burnley', 'Norwich City', 'Liverpool', 'Watford', 'Tottenham Hotspur')\ndata_teams = data.loc[data['TEAM'].isin(teams) & data['SHOTS']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sns.barplot(x = data_teams['TEAM'], y = data_teams['SHOTS'], palette = 'spring')\nax.set_xlabel(xlabel = 'Team', fontsize = 9)\nax.set_ylabel(ylabel = 'Total Shots', fontsize = 9)\nax.set_title(label = 'Distribution of total shots of players from different countries', fontsize = 20)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# finding 20 top Players who have max number of goals\n\nhighest_goals = data.sort_values('G', ascending = False)[['PLAYER','TEAM','GP','GS','G']].head(20)\nprint(highest_goals)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# finding 20 top Players who have lowest number of goals\n\nlowest_goals = data.sort_values('G', ascending = True)[['PLAYER','TEAM','GP','GS','G']].head(20)\nprint(lowest_goals)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.lineplot(data['GP'], data['G'])\nplt.title('Game Played vs Number of goals', fontsize = 20)\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.lineplot(data['GS'], data['G'])\nplt.title('Game started vs Number of goals', fontsize = 20)\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.lineplot(data['GP'], data['MIN'])\nplt.title('Game Played vs Minutes played', fontsize = 20)\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# total goals by each team\ngoals = data.groupby(\"TEAM\")[\"G\"].sum().reset_index().sort_values(by = \"G\",ascending = False)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(9,14))\nax = sns.barplot(x=\"G\",y=\"TEAM\",\n                 data=goals,palette=\"rainbow\",\n                 linewidth = 1,edgecolor = \"k\"*30)\nfor i,j in enumerate(goals[\"G\"][:20]):\n    ax.text(.3,i,j,weight=\"bold\",color = \"k\",fontsize =12)\nplt.title(\"Teams with highest total goals \")\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Work in Progress... ⏳","metadata":{"trusted":true}}]}